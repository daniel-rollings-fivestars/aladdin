{% from "macros.j2" import install_poetry, build_component, collect_components, add_poetry, add_user, add_collected_components %}
####################################################################################################
# This is a dynamically generated file created by build-components for building the
# "{{build_info.tag}}" docker image. This is actually a copy of the file used
# during the build and is only intended for informational and debugging purposes.
####################################################################################################


####################################################################################################
####################################################################################################
# Build multi-stage builder images
####################################################################################################
####################################################################################################
FROM {{build_info.builder_image}} AS builder-poetry
{{ install_poetry("poetry", build_info) -}}

{% for component in build_info.components %}
{{ build_component(component, build_info) -}}
{% endfor %}



####################################################################################################
####################################################################################################
# Collect components (to minimize layers in final build)
####################################################################################################
####################################################################################################
{{ collect_components(build_info) -}}


####################################################################################################
####################################################################################################
# Begin actual image build
####################################################################################################
####################################################################################################
FROM {{build_info.base_image}}

{{ add_poetry() -}}

{% if not build_info.dev %}
# Pre-compile python core library code
RUN python -O -m compileall
{% endif %}

{% if build_info.workdir %}
# Use our own special directory for our project code
WORKDIR {{build_info.workdir}}
ENV PYTHONPATH={{build_info.workdir}}
{% endif %}

{% if build_info.user_info.create %}
{{ add_user(build_info.user_info) -}}
{% endif %}

{% if build_info.dockerfile %}
####################################################################################################
# Specialized Dockerfile for {{build_info.component}}
####################################################################################################
{{ build_info.dockerfile_content }}
{% endif %}

{% if build_info.components %}
{{ add_collected_components(build_info) -}}
{% endif %}

####################################################################################################
# Finalize image
####################################################################################################
# Check that our libraries didn't introduce any conflicts
RUN pip check

{# # Add the user's bin directory to the PATH to enable any python scripts
ENV PATH={{build_info.user_info.home}}/.local/bin:$PATH
 #}
